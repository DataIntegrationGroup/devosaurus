"use strict";(self.webpackChunkdeveloper_pages=self.webpackChunkdeveloper_pages||[]).push([[193],{6563:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"tutorial-basics/to-csv","title":"Write to CSV","description":"In this section we will demonstrate how to write data to a csv file.","source":"@site/docs/tutorial-basics/to-csv.md","sourceDirName":"tutorial-basics","slug":"/tutorial-basics/to-csv","permalink":"/devosaurus/docs/tutorial-basics/to-csv","draft":false,"unlisted":false,"editUrl":"https://github.com/DataIntegrationGroup/devosaurus/tree/main/docs/tutorial-basics/to-csv.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start","permalink":"/devosaurus/docs/tutorial-basics/quick-start"},"next":{"title":"Tutorial - Extras","permalink":"/devosaurus/docs/category/tutorial---extras"}}');var i=n(4848),a=n(8453);const r={},s="Write to CSV",c={},l=[];function d(t){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"write-to-csv",children:"Write to CSV"})}),"\n",(0,i.jsx)(e.p,{children:"In this section we will demonstrate how to write data to a csv file."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"\ndef write_to_csv(json_data, output):\n    header='name,description,latitude,longitude,agency'\n    with open(output, 'w') as wfile:\n        wfile.write(header)\n        for li in json_data['values']:\n\n            row = ','.join([str(v) for v in make_location_row(li)])\n            wfile.write(f'{row}\\n')\n\ndef make_location_row(location)\n    lat = location['location']['coordinates'][1]\n    lon = location['location']['coordinates'][0]\n    return [location['name'], location['description'], lat, lon, location['properties']['agency']]\n\n\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Used in conjunction with our ",(0,i.jsx)("code",{children:"get_locations"})," function our complete script might look something like"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"import requests\ndef get_locations(agency=None):\n\n    url = \"https://st2.newmexicowaterdata.org/FROST-Server/v1.1/Locations\"\n\n    if agency:\n        url = f\"{url}?$filter=properties/agency eq '{agency}'\"\n    resp = requests.get(url)\n    if resp.status_code==200:\n        return resp.json()\n\ndef write_to_csv(json_data, output):\n    header='name,description,latitude,longitude,agency'\n    with open(output, 'w') as wfile:\n        wfile.write(header)\n        for li in json_data['values']:\n\n            row = ','.join([str(v) for v in make_location_row(li)])\n            wfile.write(f'{row}\\n')\n\ndef make_location_row(location)\n    lat = location['location']['coordinates'][1]\n    lon = location['location']['coordinates'][0]\n    return [location['name'], location['description'], lat, lon, location['properties']['agency']]\n\nif __name__=='__main__':\n    locations = get_locations(agency='EBID')\n    write_to_csv(locations, 'EBID_locations.csv')\n"})})]})}function u(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>s});var o=n(6540);const i={},a=o.createContext(i);function r(t){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),o.createElement(a.Provider,{value:e},t.children)}}}]);